{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SaurabhNilegaonkar\\\\Downloads\\\\react1stApp\\\\my-first-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\SaurabhNilegaonkar\\\\Downloads\\\\react1stApp\\\\my-first-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Swipe from 'react-easy-swipe';\nimport classnames from 'classnames';\nimport { overlayStyle, overlayActiveStyle, menuOuterStyle, menuOuterActiveStyle, menuShadowStyle, menuShadowActiveStyle, menuInnerStyle, getSkew } from './styles';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"ATM pin reset\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"Menu goes here\"));\n}\n\nconst IDLE = 'idle';\nconst VERTICAL = 'vertical';\nconst HORIZONTAL = 'horizontal';\n\nclass CheeseburgerMenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      swiping: false,\n      direction: IDLE,\n      swipePosition: {\n        x: 0,\n        y: 0\n      },\n      menuExtraStyle: {}\n    };\n    this.onSwipeStart = this.onSwipeStart.bind(this);\n    this.onSwipeMove = this.onSwipeMove.bind(this);\n    this.onSwipeEnd = this.onSwipeEnd.bind(this);\n  }\n\n  onSwipeStart(event) {\n    if (this.props.isOpen) {\n      this.setState({\n        swiping: true\n      });\n    }\n  }\n\n  onSwipeMove(position, event) {\n    if (this.state.swiping) {\n      const options = this.getOptions();\n      let direction = this.state.direction;\n\n      if (direction === IDLE) {\n        const swipeThreshold = options.width / 15;\n        const pastThreshold = Math.abs(position.x) > swipeThreshold || Math.abs(position.y) > swipeThreshold;\n\n        if (pastThreshold) {\n          if ((!this.props.right && position.x < 0 || this.props.right && position.x > 0) && Math.abs(position.x) > Math.abs(position.y)) {\n            direction = HORIZONTAL;\n          } else {\n            direction = VERTICAL;\n          }\n        }\n      }\n\n      if (direction === HORIZONTAL) {\n        const swipeClosing = !this.props.right && position.x < 0 || this.props.right && position.x > 0;\n        const translateX = swipeClosing ? position.x : 0;\n        this.setState({\n          direction,\n          swipePosition: position,\n          menuExtraStyle: {\n            transform: getSkew(options) + `translate3d(${translateX}px, 0px, 0px)`,\n            transition: 'transform 0s'\n          }\n        });\n        event.preventDefault();\n      }\n\n      if (direction === VERTICAL) {\n        this.setState({\n          direction,\n          swipePosition: {\n            x: 0,\n            y: 0\n          },\n          menuExtraStyle: {}\n        });\n      }\n    }\n  }\n\n  onSwipeEnd(event) {\n    const swipeCloseThreshold = this.getOptions().width / 3;\n\n    if (!this.props.right && this.state.swipePosition.x < -swipeCloseThreshold || this.props.right && this.state.swipePosition.x > swipeCloseThreshold) {\n      this.props.closeCallback();\n    }\n\n    this.setState({\n      swiping: false,\n      direction: IDLE,\n      swipePosition: {\n        x: 0,\n        y: 0\n      },\n      menuExtraStyle: {}\n    });\n  }\n\n  getOptions() {\n    return {\n      isLeft: !this.props.right,\n      transitionTime: this.props.transitionTime || 0.3,\n      topOffset: this.props.topOffset || 0,\n      bottomOffset: this.props.bottomOffset || 0,\n      width: this.props.width || 300,\n      backgroundColor: this.props.backgroundColor || 'white',\n      showShadow: !this.props.noShadow,\n      skewY: this.props.skewY\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          closeCallback = _this$props.closeCallback,\n          className = _this$props.className,\n          overlayClassName = _this$props.overlayClassName,\n          outerClassName = _this$props.outerClassName,\n          innerClassName = _this$props.innerClassName,\n          shadowClassName = _this$props.shadowClassName,\n          children = _this$props.children;\n    const options = this.getOptions();\n    const baseMenuOuterStyle = isOpen ? menuOuterActiveStyle(options) : menuOuterStyle(options);\n\n    const currentMenuOuterStyle = _objectSpread({}, baseMenuOuterStyle, {}, this.state.menuExtraStyle);\n\n    return React.createElement(\"div\", {\n      className: classnames('cheeseburger-menu', className, {\n        open: isOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('cheeseburger-menu-overlay', overlayClassName),\n      style: isOpen ? overlayActiveStyle(options) : overlayStyle(options),\n      onClick: closeCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Swipe, {\n      onSwipeStart: this.onSwipeStart,\n      onSwipeMove: this.onSwipeMove,\n      onSwipeEnd: this.onSwipeEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('cheeseburger-menu-outer', outerClassName),\n      style: currentMenuOuterStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('cheeseburger-menu-inner', innerClassName),\n      style: menuInnerStyle(options),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, children), React.createElement(\"div\", {\n      className: classnames('cheeseburger-menu-shadow', shadowClassName),\n      style: isOpen ? menuShadowActiveStyle(options) : menuShadowStyle(options),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nCheeseburgerMenu.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n  right: PropTypes.bool,\n  transitionTime: PropTypes.number,\n  topOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bottomOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  width: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  skewY: PropTypes.number,\n  noShadow: PropTypes.bool,\n  className: PropTypes.string,\n  overlayClassName: PropTypes.string,\n  outerClassName: PropTypes.string,\n  innerClassName: PropTypes.string,\n  shadowClassName: PropTypes.string,\n  children: PropTypes.node\n};\nexport default CheeseburgerMenu; // export default App;","map":{"version":3,"sources":["C:/Users/SaurabhNilegaonkar/Downloads/react1stApp/my-first-app/src/App.js"],"names":["React","Component","PropTypes","Swipe","classnames","overlayStyle","overlayActiveStyle","menuOuterStyle","menuOuterActiveStyle","menuShadowStyle","menuShadowActiveStyle","menuInnerStyle","getSkew","App","IDLE","VERTICAL","HORIZONTAL","CheeseburgerMenu","constructor","state","swiping","direction","swipePosition","x","y","menuExtraStyle","onSwipeStart","bind","onSwipeMove","onSwipeEnd","event","props","isOpen","setState","position","options","getOptions","swipeThreshold","width","pastThreshold","Math","abs","right","swipeClosing","translateX","transform","transition","preventDefault","swipeCloseThreshold","closeCallback","isLeft","transitionTime","topOffset","bottomOffset","backgroundColor","showShadow","noShadow","skewY","render","className","overlayClassName","outerClassName","innerClassName","shadowClassName","children","baseMenuOuterStyle","currentMenuOuterStyle","open","propTypes","bool","isRequired","func","number","oneOfType","string","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport PropTypes from 'prop-types'\nimport Swipe from 'react-easy-swipe'\nimport classnames from 'classnames'\n\nimport {\n    overlayStyle,\n    overlayActiveStyle,\n    menuOuterStyle,\n    menuOuterActiveStyle,\n    menuShadowStyle,\n    menuShadowActiveStyle,\n    menuInnerStyle,\n    getSkew,\n  } from './styles'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        ATM pin reset\n        <br/>Menu goes here\n      </header>\n    </div>\n  );\n}\n\n    const IDLE = 'idle'\n    const VERTICAL = 'vertical'\n    const HORIZONTAL = 'horizontal'\n\n  class CheeseburgerMenu extends Component {\n    constructor() {\n      super()\n      this.state = {\n        swiping: false,\n        direction: IDLE,\n        swipePosition: { x: 0, y: 0 },\n        menuExtraStyle: {},\n      }\n  \n      this.onSwipeStart = this.onSwipeStart.bind(this)\n      this.onSwipeMove = this.onSwipeMove.bind(this)\n      this.onSwipeEnd = this.onSwipeEnd.bind(this)\n    }\n  \n    onSwipeStart(event) {\n      if (this.props.isOpen) {\n        this.setState({\n          swiping: true,\n        })\n      }\n    }\n  \n    onSwipeMove(position, event) {\n      if (this.state.swiping) {\n        const options = this.getOptions()\n        let direction = this.state.direction\n  \n        if (direction === IDLE) {\n          const swipeThreshold = options.width / 15\n          const pastThreshold = (\n            (Math.abs(position.x) > swipeThreshold) ||\n            (Math.abs(position.y) > swipeThreshold)\n          )\n  \n          if (pastThreshold) {\n            if (\n              (\n                (!this.props.right && position.x < 0) ||\n                ( this.props.right && position.x > 0)\n              ) &&\n              Math.abs(position.x) > Math.abs(position.y)\n            ) {\n              direction = HORIZONTAL\n            }\n            else {\n              direction = VERTICAL\n            }\n          }\n        }\n  \n        if (direction === HORIZONTAL) {\n          const swipeClosing = (\n            (!this.props.right && position.x < 0) ||\n            ( this.props.right && position.x > 0)\n          )\n  \n          const translateX = (swipeClosing ? position.x : 0)\n  \n          this.setState({\n            direction,\n            swipePosition: position,\n            menuExtraStyle: {\n              transform: getSkew(options) + `translate3d(${translateX}px, 0px, 0px)`,\n              transition: 'transform 0s',\n            },\n          })\n  \n          event.preventDefault()\n        }\n  \n        if (direction === VERTICAL) {\n          this.setState({\n            direction,\n            swipePosition: { x: 0, y: 0 },\n            menuExtraStyle: {},\n          })\n        }\n      }\n    }\n  \n    onSwipeEnd(event) {\n      const swipeCloseThreshold = this.getOptions().width / 3\n      if (\n        (!this.props.right && this.state.swipePosition.x < -swipeCloseThreshold) ||\n        (this.props.right && this.state.swipePosition.x > swipeCloseThreshold)\n      ) {\n        this.props.closeCallback()\n      }\n      this.setState({\n        swiping: false,\n        direction: IDLE,\n        swipePosition: { x: 0, y: 0 },\n        menuExtraStyle: {},\n      })\n    }\n  \n    getOptions() {\n      return {\n        isLeft: !this.props.right,\n        transitionTime: this.props.transitionTime || 0.3,\n        topOffset: this.props.topOffset || 0,\n        bottomOffset: this.props.bottomOffset || 0,\n        width: this.props.width || 300,\n        backgroundColor: this.props.backgroundColor || 'white',\n        showShadow: !this.props.noShadow,\n        skewY: this.props.skewY,\n      }\n    }\n  \n    render() {\n      const {\n        isOpen,\n        closeCallback,\n        className,\n        overlayClassName,\n        outerClassName,\n        innerClassName,\n        shadowClassName,\n        children,\n      } = this.props\n  \n      const options = this.getOptions()\n  \n      const baseMenuOuterStyle = (isOpen ? menuOuterActiveStyle(options) : menuOuterStyle(options))\n      const currentMenuOuterStyle = { ...baseMenuOuterStyle, ...this.state.menuExtraStyle }\n  \n      return (\n        <div\n          className={classnames(\n            'cheeseburger-menu',\n            className,\n            { open: isOpen }\n          )}\n        >\n          <div\n            className={classnames('cheeseburger-menu-overlay', overlayClassName)}\n            style={isOpen ? overlayActiveStyle(options) : overlayStyle(options)}\n            onClick={closeCallback}\n          />\n  \n          <Swipe\n            onSwipeStart={this.onSwipeStart}\n            onSwipeMove={this.onSwipeMove}\n            onSwipeEnd={this.onSwipeEnd}\n          >\n            <div className={classnames('cheeseburger-menu-outer', outerClassName)} style={currentMenuOuterStyle}>\n              <div className={classnames('cheeseburger-menu-inner', innerClassName)} style={menuInnerStyle(options)}>\n                {children}\n              </div>\n              <div\n                className={classnames('cheeseburger-menu-shadow', shadowClassName)}\n                style={isOpen ? menuShadowActiveStyle(options) : menuShadowStyle(options)}\n              />\n            </div>\n          </Swipe>\n        </div>\n      )\n    }\n  }\n  \n  CheeseburgerMenu.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    closeCallback: PropTypes.func.isRequired,\n    right: PropTypes.bool,\n    transitionTime: PropTypes.number,\n    topOffset: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    bottomOffset: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    width: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    skewY: PropTypes.number,\n    noShadow: PropTypes.bool,\n    className: PropTypes.string,\n    overlayClassName: PropTypes.string,\n    outerClassName: PropTypes.string,\n    innerClassName: PropTypes.string,\n    shadowClassName: PropTypes.string,\n    children: PropTypes.node,\n  }\n  \n  export default CheeseburgerMenu\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}